
/*

Write a program that:
  - main thread creates another therad. - pthread_create
  - in the manin thread, it should print out ht e new thread's id, wait until it
terminates and print out the return value - pthread, phtread_join
  - the other thread should get a string from the main thread as the argument,
print that out as well as its own ID, and reutrn the length of the received
string.
      - string as the main argument
      - via created thread; print out the string, id, and length

functions to use:

- pthread_create
- pthread_join

  */
#include <string.h>
#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>

static void *thread_func(void *arg) {
  char *s = arg;
  printf("received %s", s);
  pthread_t id = pthread_self();
  printf("New thread id: %ld\n", id);
  return (void *)strlen(s);
}

int main() {
  pthread_t t1;
  void *res;
  int s;

  s = pthread_create(&t1, NULL, thread_func, "hello world\n");
  if (s != 0) {
    perror("pthread_create");
  }

  printf("New thread ID: %ld\n", t1);
  s = pthread_join(t1, &res);
  if (s != 0) {
    perror("pthread_join");
  }
  printf("Return %ld\n", (long)res);
  return 1;
}
