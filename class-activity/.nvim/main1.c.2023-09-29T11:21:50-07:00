

#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/wait.h>
#define _XOPEN_SOURCE >= 500


int main() {
  //////////////////////////////////////////////////////
  // write a program that calls one of 'exec' functions that executes 'ls -al'
  //"" "" ""
  // if parent, calls any one of 'exec' functions that executes 'ls -al'
  // if child, calls any one of 'exec' functions that executes 'exa -al'

  /*char *programName = "ls";
    char *arg1 = "-al";
    char *arg2 = "/home/cmpt201/class-activity";
    int value = execlp("/home/cmpt201/class-activity","ls -al",NULL);
    printf("%d\n", value);
    execl ("/bin/ls", "ls", "-al", "/home/cmpt201/class-activity", NULL);
          execl ("/bin/ls", "ls", "-al", ".", NULL);
    execl ("/home/cmpt201/class-activity", "ls -al", NULL);*/

  //////////////////////////////////////////////////
  //  3 Wait();
  //  use pid_t waitpid();
  // write a program that first creates a child process
  // child process should run exa -al
  // parent process should wait for the child process to terminate using
  // waitpid() if the child exiited normally print out "Child done." If not,
  // print out the exit status
  //
  int value = fork();
  int *wstatus; 

  if (value != 0) {
    waitpid(value, wstatus, WIFEXITED(*wstatus));
    printf("Test Run\n");
  } else {
    execl("/bin/exa", "exa", "-al", ".", NULL);
  }

// 
}
