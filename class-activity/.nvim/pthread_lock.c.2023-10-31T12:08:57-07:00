
#include <pthread.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

static pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
static pthread_mutex_t mutex1 = PTHREAD_MUTEX_INITIALIZER;


int count = 0;

static void *thread_func1(void *arg) {
  printf("thread0\n");
  pthread_mutex_lock(&mutex);
  pthread_mutex_lock(&mutex1);
  //pthread_mutex_unlock(&mutex);
  pthread_exit(0);
}


static void *thread_func2(void *arg) {
  printf("thread1\n");
  pthread_mutex_lock(&mutex1);
  pthread_mutex_lock(&mutex);
 //pthread_mutex_unlock(&mutex);
  pthread_exit(0);
}

int main() {
  //  pthread_mutex_t mutex = PTHREAD_MUTEX_INITIALIZER;
  pthread_t t1;
  pthread_t t2;
  pthread_create(&t1, NULL, thread_func1, NULL);
  pthread_join(t1, NULL);
  pthread_create(&t2, NULL, thread_func2, NULL);
  pthread_join(t2, NULL);
//  printf("Count: %d\n", count);
}
